import random

# Function to perform Bubble Sort
def bubble_sort(arr):
    n = len(arr)  # Get the length of the array
    comparisons = 0  # Initialize the comparisons counter
    swaps = 0  # Initialize the swaps counter

    # Loop through the array
    for i in range(n):
        # Inner loop to compare adjacent elements
        for j in range(0, n-i-1):
            comparisons += 1  # Increment the comparisons counter
            # If the current element is greater than the next element, swap them
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swaps += 1  # Increment the swaps counter

    return arr, comparisons, swaps  # Return the sorted array and the counters

# Function to perform Selection Sort
def selection_sort(arr):
    n = len(arr)  # Get the length of the array
    comparisons = 0  # Initialize the comparisons counter
    swaps = 0  # Initialize the swaps counter

    # Loop through the array
    for i in range(n):
        min_idx = i  # Assume the current position is the minimum

        # Inner loop to find the actual minimum element
        for j in range(i+1, n):
            comparisons += 1  # Increment the comparisons counter
            # If a smaller element is found, update the minimum index
            if arr[j] < arr[min_idx]:
                min_idx = j

        # Swap the found minimum element with the first unsorted element
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
        swaps += 1  # Increment the swaps counter

    return arr, comparisons, swaps  # Return the sorted array and the counters

def main():
    # Generate a list of 10 random numbers between 1 and 99
    original_list = random.sample(range(1, 100), 10)
    print(f"Original list: {original_list}")  # Print the original list

    # Sort the list using Bubble Sort
    bubble_sorted_list, bubble_comparisons, bubble_swaps = bubble_sort(original_list.copy())
    print(f"Bubble Sorted list: {bubble_sorted_list}")  # Print the Bubble Sorted list
    print(f"Bubble Sort - Comparisons: {bubble_comparisons}, Swaps: {bubble_swaps}")  # Print the Bubble Sort counters

    # Sort the list using Selection Sort
    selection_sorted_list, selection_comparisons, selection_swaps = selection_sort(original_list.copy())
    print(f"Selection Sorted list: {selection_sorted_list}")  # Print the Selection Sorted list
    print(f"Selection Sort - Comparisons: {selection_comparisons}, Swaps: {selection_swaps}")  # Print the Selection Sort counters

# Call the main function to execute the program
if __name__ == "__main__":
    main()
